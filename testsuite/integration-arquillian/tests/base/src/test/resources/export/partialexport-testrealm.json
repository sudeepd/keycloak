{
  "id": "partial-export-test",
  "realm": "partial-export-test",

  "roles": {
    "realm": [
      {
        "name": "sample-realm-role",
        "description": "Sample realm role",
        "scopeParamRequired": false,
        "composite": false,
        "clientRole": false,
        "containerId": "test"
      },
      {
        "name": "realm-composite-role",
        "description": "Realm composite role containing client role",
        "scopeParamRequired": false,
        "composite": true,
        "composites": {
          "realm": [
            "sample-realm-role"
          ],
          "client": {
            "test-app": [
              "sample-client-role"
            ],
            "account": [
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "test"
      },
      {
        "name": "customer-user-premium",
        "description": "Have User Premium privileges",
        "scopeParamRequired": false,
        "composite": false,
        "clientRole": false,
        "containerId": "test"
      },
      {
        "name": "admin",
        "description": "Have Administrator privileges",
        "scopeParamRequired": false,
        "composite": false,
        "clientRole": false,
        "containerId": "test"
      },
      {
        "name": "user",
        "description": "Have User privileges",
        "scopeParamRequired": false,
        "composite": false,
        "clientRole": false,
        "containerId": "test"
      }
    ],
    "client": {
      "test-app": [
        {
          "name": "customer-admin",
          "description": "Have Customer Admin privileges",
          "scopeParamRequired": false,
          "composite": false,
          "clientRole": true,
          "containerId": "c1a37c9e-6ba4-4d77-988d-ab11462d5668"
        },
        {
          "name": "sample-client-role",
          "description": "Sample client role",
          "scopeParamRequired": false,
          "composite": false,
          "clientRole": true,
          "containerId": "c1a37c9e-6ba4-4d77-988d-ab11462d5668"
        },
        {
          "name": "customer-admin-composite-role",
          "description": "Have Customer Admin privileges via composite role",
          "scopeParamRequired": false,
          "composite": true,
          "composites": {
            "realm": [
              "customer-user-premium"
            ],
            "client": {
              "test-app": [
                "customer-admin"
              ]
            }
          },
          "clientRole": true,
          "containerId": "c1a37c9e-6ba4-4d77-988d-ab11462d5668"
        },
        {
          "name": "customer-user",
          "description": "Have Customer User privileges",
          "scopeParamRequired": false,
          "composite": false,
          "clientRole": true,
          "containerId": "c1a37c9e-6ba4-4d77-988d-ab11462d5668"
        }
      ],
      "test-app-scope": [
        {
          "name": "test-app-disallowed-by-scope",
          "description": "Role disallowed by scope in test-app-scope",
          "scopeParamRequired": false,
          "composite": false,
          "clientRole": true,
          "containerId": "f3ff0b0d-e922-4874-a34c-cdfa1b3305fe"
        },
        {
          "name": "test-app-allowed-by-scope",
          "description": "Role allowed by scope in test-app-scope",
          "scopeParamRequired": false,
          "composite": false,
          "clientRole": true,
          "containerId": "f3ff0b0d-e922-4874-a34c-cdfa1b3305fe"
        }
      ],
      "test-app-service-account": [
        {
          "name": "test-app-service-account",
          "description": "test-app-service-account",
          "composite": false,
          "clientRole": true,
          "containerId": "9f39a1b4-8ca1-45e1-943d-9149c5bdcca4",
          "attributes": {}
        },
        {
          "name": "test-app-service-account-child",
          "description": "test-app-service-account-child",
          "composite": false,
          "clientRole": true,
          "containerId": "9f39a1b4-8ca1-45e1-943d-9149c5bdcca4",
          "attributes": {}
        },
        {
          "name": "test-app-service-account-parent",
          "description": "test-app-service-account-parent",
          "composite": true,
          "composites": {
            "client": {
              "test-app-service-account": [
                "test-app-service-account-child"
              ]
            }
          },
          "clientRole": true,
          "containerId": "9f39a1b4-8ca1-45e1-943d-9149c5bdcca4",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [
    {
      "name": "roleRichGroup",
      "path": "/roleRichGroup",
      "attributes": {
        "topAttribute": [
          "true"
        ]
      },
      "realmRoles": [
        "realm-composite-role",
        "user"
      ],
      "clientRoles": {
        "account": [
          "manage-account"
        ]
      },
      "subGroups": [
        {
          "name": "level2group",
          "path": "/roleRichGroup/level2group",
          "attributes": {
            "level2Attribute": [
              "true"
            ]
          },
          "realmRoles": [
            "admin"
          ],
          "clientRoles": {
            "test-app": [
              "customer-admin-composite-role",
              "customer-user"
            ]
          },
          "subGroups": []
        }
      ]
    },
    {
      "name": "topGroup",
      "path": "/topGroup",
      "attributes": {
        "topAttribute": [
          "true"
        ]
      },
      "realmRoles": [
        "user"
      ],
      "clientRoles": {},
      "subGroups": [
        {
          "name": "level2group",
          "path": "/topGroup/level2group",
          "attributes": {
            "level2Attribute": [
              "true"
            ]
          },
          "realmRoles": [
            "admin"
          ],
          "clientRoles": {
            "test-app": [
              "customer-user"
            ]
          },
          "subGroups": []
        }
      ]
    }
  ],
  "defaultRoles": [
    "user",
    "offline_access",
    "uma_authorization"
  ],
  "smtpServer": {
    "from": "auto@keycloak.org",
    "host": "localhost",
    "port": "3025",
    "user": "user",
    "password": "secret"
  },
  "users": [
    {
      "username" : "bburke",
      "enabled": true,
      "email" : "bburke@redhat.com",
      "credentials" : [
        {
          "type" : "password",
          "value" : "password"
        }
      ],
      "attributes" : {
        "phone": "617"
      },
      "realmRoles": [
        "user"
      ],
      "applicationRoles": {
        "test-app": [
          "sample-client-role"
        ]
      }
    },
    {
      "username": "service-account-test-app-service-account",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "email": "service-account-test-app-service-account@placeholder.org",
      "serviceAccountClientId": "test-app-service-account",
      "credentials" : [
        {
          "type" : "password",
          "value" : "password"
        }
      ],
      "realmRoles": [
        "uma_authorization",
        "user",
        "offline_access"
      ],
      "clientRoles": {
        "test-app-service-account": [
          "test-app-service-account",
          "test-app-service-account-parent"
        ],
        "account": [
          "manage-account",
          "view-profile"
        ]
      },
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "client": "test-app",
      "roles": [
        "user"
      ]
    },
    {
      "client": "test-app-scope",
      "roles": [
        "admin",
        "user"
      ]
    },
    {
      "client": "third-party",
      "roles": [
        "user"
      ]
    }
  ],
  "clientScopeMappings": {
    "realm-management": [
      {
        "client": "admin-cli",
        "roles": [
          "realm-admin"
        ]
      },
      {
        "client": "security-admin-console",
        "roles": [
          "realm-admin"
        ]
      }
    ],
    "test-app": [
      {
        "client": "test-app-scope",
        "roles": [
          "customer-admin-composite-role"
        ]
      },
      {
        "client": "third-party",
        "roles": [
          "customer-user"
        ]
      }
    ],
    "test-app-scope": [
      {
        "client": "test-app-scope",
        "roles": [
          "test-app-allowed-by-scope"
        ]
      }
    ]
  },
  "clients": [
    {
      "clientId": "test-app",
      "adminUrl": "http://localhost:8180/auth/realms/master/app/admin",
      "baseUrl": "http://localhost:8180/auth/realms/master/app/auth",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "password",
      "redirectUris": [
        "http://localhost:8180/auth/realms/master/app/auth/*"
      ],
      "webOrigins": [
        "http://localhost:8180"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "attributes": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        },
        {
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": true,
          "consentText": "${fullName}",
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${email}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${username}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${givenName}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${familyName}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        }
      ],
      "useTemplateConfig": false,
      "useTemplateScope": false,
      "useTemplateMappers": false
    },
    {
      "clientId": "test-app-scope",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "password",
      "redirectUris": [
        "http://localhost:8180/auth/realms/master/app/*"
      ],
      "webOrigins": [
        "http://localhost:8180"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "attributes": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${email}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": true,
          "consentText": "${fullName}",
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${username}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${familyName}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        },
        {
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${givenName}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        }
      ],
      "useTemplateConfig": false,
      "useTemplateScope": false,
      "useTemplateMappers": false
    },
    {
      "clientId": "third-party",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "password",
      "redirectUris": [
        "http://localhost:8180/auth/realms/master/app/*"
      ],
      "webOrigins": [
        "http://localhost:8180"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": true,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "attributes": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${familyName}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${email}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${username}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${givenName}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        },
        {
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": true,
          "consentText": "${fullName}",
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ],
      "useTemplateConfig": false,
      "useTemplateScope": false,
      "useTemplateMappers": false
    },
    {
      "clientId": "test-app-service-account",
      "rootUrl": "http://localhost:8180/auth/realms/master/app-service-account",
      "adminUrl": "http://localhost:8180/auth/realms/master/app-service-account",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "password",
      "redirectUris": [
        "http://localhost:8180/auth/realms/master/app-service-account/*"
      ],
      "webOrigins": [
        "http://localhost:8180"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }],
  "components": {
    "org.keycloak.keys.KeyProvider": [
      {
        "name": "rsa",
        "providerId": "rsa",
        "subComponents": {},
        "config": {
          "privateKey": [
            "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"
          ],
          "certificate": [
            "MIIBkTCB+wIGAVufbLMuMA0GCSqGSIb3DQEBCwUAMA8xDTALBgNVBAMMBHRlc3QwHhcNMTcwNDI0MTAwNDEyWhcNMjcwNDI0MTAwNTUyWjAPMQ0wCwYDVQQDDAR0ZXN0MIIBojANBgkqhkiG9w0BAQEFAAOCAY8AMIIBigKCAYEAs2njo0TT4UkMcp2Cq+6wcyEVZsyLJ+3bIG5pBPwzik3jUEPG3r7SlPJyx/x6wXUNDvI/x4Q7CKEh6Xm1oLXGStyHQWiFX9VuyTe4aR5VMWC6maezK2YsWVkXY0OGCi96J85qWHRGnIloaCKXr0vfyVsGmrAwnCmRj/aUiQTwZB54lQt0t9wgrT944vvCVoyAiThmIlMNdL87LNwjj5t50kKmPccCl7bjo4IvakDMhpJbvJbz7WWldoBWa7hlU8EmGpUhB3Q2pNqnUQBVKeYu67kfA9uLto6XK/UTpwVcIugveS5v8f/5ZhWM6oGNfam8JiJhD7zP3GYfSTpcYGDKrLnqdE7+bOxzYSXVqTS0dO2J20qr0J2qnykI+y/dpCiZDlhq0AChe142QkxA9zDbSmH89Oy6oJvdBnycSTNv2EzameRakxZyDI3Jc2zrc9e/76i3HPO1RK6ZItieEqg4sa/RUGbO3eaq8rdKUwrxGLuxighO11uZ5KcdOhW9PixFAgMBAAE=MA0GCSqGSIb3DQEBCwUAA4GBAKKj6Ygftq7iSfvi8G6IoJ4RbknpA0+g+s1fYgmpdHdBEfAfbODmWrNR8GLWQDU0ccnHT0oQDc66ShfluMZ0KAVcfxNJUFP2OYdrGNRJNZbGT9WMcD8LUF8mlACa8uKVfhMU4LssOdEBnW2RpM4xEe1DYPRC+AWoFODb0wsYDwll"
          ],
          "priority": [
            "100"
          ]
        }
      }
    ],
    "org.keycloak.storage.UserStorageProvider": [
      {
        "name": "ldap-apacheds",
        "providerId": "ldap",
        "subComponents": {
          "org.keycloak.storage.ldap.mappers.LDAPStorageMapper": [
            {
              "name": "username",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {

              },
              "config": {
                "ldap.attribute": [
                  "uid"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "username"
                ]
              }
            },
            {
              "name": "first name",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {

              },
              "config": {
                "ldap.attribute": [
                  "cn"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "firstName"
                ]
              }
            },
            {
              "name": "last name",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {

              },
              "config": {
                "ldap.attribute": [
                  "sn"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "lastName"
                ]
              }
            },
            {
              "name": "email",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {

              },
              "config": {
                "ldap.attribute": [
                  "mail"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "email"
                ]
              }
            },
            {
              "name": "creation date",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {

              },
              "config": {
                "ldap.attribute": [
                  "createTimestamp"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "read.only": [
                  "true"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "createTimestamp"
                ]
              }
            },
            {
              "name": "modify date",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {

              },
              "config": {
                "ldap.attribute": [
                  "modifyTimestamp"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "read.only": [
                  "true"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "modifyTimestamp"
                ]
              }
            },
            {
              "name": "postal code",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {

              },
              "config": {
                "ldap.attribute": [
                  "postalCode"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "postal_code"
                ]
              }
            },
            {
              "name": "street",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {

              },
              "config": {
                "ldap.attribute": [
                  "street"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "street"
                ]
              }
            },
            {
              "name": "picture",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {

              },
              "config": {
                "ldap.attribute": [
                  "jpegPhoto"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "is.binary.attribute": [
                  "true"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "true"
                ],
                "user.model.attribute": [
                  "picture"
                ]
              }
            },
            {
              "name": "realm roles",
              "providerId": "role-ldap-mapper",
              "subComponents": {

              },
              "config": {
                "mode": [
                  "LDAP_ONLY"
                ],
                "roles.dn": [
                  "ou=RealmRoles,dc=keycloak,dc=org"
                ],
                "membership.ldap.attribute": [
                  "member"
                ],
                "role.name.ldap.attribute": [
                  "cn"
                ],
                "use.realm.roles.mapping": [
                  "true"
                ],
                "role.object.classes": [
                  "groupOfNames"
                ]
              }
            },
            {
              "name": "finance roles",
              "providerId": "role-ldap-mapper",
              "subComponents": {

              },
              "config": {
                "mode": [
                  "LDAP_ONLY"
                ],
                "roles.dn": [
                  "ou=FinanceRoles,dc=keycloak,dc=org"
                ],
                "membership.ldap.attribute": [
                  "member"
                ],
                "role.name.ldap.attribute": [
                  "cn"
                ],
                "use.realm.roles.mapping": [
                  "false"
                ],
                "role.object.classes": [
                  "groupOfNames"
                ],
                "client.id": [
                  "finance"
                ]
              }
            }
          ]
        },
        "config": {
          "fullSyncPeriod": [
            "-1"
          ],
          "pagination": [
            "true"
          ],
          "debug": [
            "false"
          ],
          "searchScope": [
            "1"
          ],
          "connectionPooling": [
            "true"
          ],
          "usersDn": [
            "ou=People,dc=keycloak,dc=org"
          ],
          "priority": [
            "1"
          ],
          "userObjectClasses": [
            "inetOrgPerson, organizationalPerson"
          ],
          "changedSyncPeriod": [
            "-1"
          ],
          "usernameLDAPAttribute": [
            "uid"
          ],
          "bindDn": [
            "uid=admin,ou=system"
          ],
          "bindCredential": [
            "secret"
          ],
          "rdnLDAPAttribute": [
            "uid"
          ],
          "lastSync": [
            "0"
          ],
          "vendor": [
            "other"
          ],
          "editMode": [
            "WRITABLE"
          ],
          "uuidLDAPAttribute": [
            "entryUUID"
          ],
          "connectionUrl": [
            "ldap://localhost:10389"
          ],
          "syncRegistrations": [
            "true"
          ],
          "authType": [
            "simple"
          ]
        }
      }
    ]
  },
  "identityProviders" : [
    {
      "providerId" : "google",
      "alias" : "google1",
      "enabled": true,
      "config": {
        "syncMode": "IMPORT",
        "clientId": "googleId",
        "clientSecret": "googleSecret"
      }
    }
  ]
}
